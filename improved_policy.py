from agent import Agent
import numpy as np

def improved_policy(agent: Agent) -> str:
    """
    Improved policy of the agent
    Returns "left", "right", or "none"
    """
    actions = ["left", "right", "none"]

    # Change position if agent is placed in the first or last position and there is nothing here
    if agent.position == 0 and agent.known_rewards[0] == 0:
        return "right"
    if agent.position == 7 and agent.known_rewards[7] == 0:
        return "left"

    # Change position if the max value of known rewards is significantly lower than the average reward value
    max_val = max(agent.known_rewards)
    if max_val < 30:
        # Change position in the direction of the unknown part of the array
        mean_left = np.mean(agent.known_rewards[:2])
        mean_right = np.mean(agent.known_rewards[-2:])
        if mean_left < mean_right:
            return "left"
        return "right"

    # Change position if the agent is not placed on one of the best rewards in the array
    idx_max = np.where(agent.known_rewards == max(agent.known_rewards))[0]
    idx_min = np.where(agent.known_rewards == min(agent.known_rewards))[0]

    if agent.position in idx_min:
        # If agent is on the minimum reward, move towards the direction of the maximum reward
        return "left" if idx_max[0] < agent.position else "right"

    if agent.position not in idx_max:
        # If agent is not on the maximum reward, move towards the maximum reward
        return "left" if idx_max[0] < agent.position else "right"

    return "none"
